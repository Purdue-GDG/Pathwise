[
  {
    "course_code": "CS 10100",
    "title": "",
    "credits": "3.00.  Survey of the digital world, computers as multi-purpose machines, digital information, definition of programming, computers everywhere (the Internet of things), computers that perform simultaneous computations, how apps work, data storage and searching, databases, digital audio, graphics, video, computer networks and the Internet, the World Wide Web and Internet sharing services, network and Internet performance, real-time services, artificial intelligence, cloud computing, security, and privacy. CS students may take course for elective credit only.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=10100&enhanced=Y"
  },
  {
    "course_code": "CS 15900",
    "title": "",
    "credits": "3.00.  Fundamental principles, concepts, and methods of programming in C, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; and use of programming logic in solving engineering problems. Students are expected to complete assignments in a collaborative learning environment. Credit cannot be obtained for both CS 15900 and any of CS 15600, CS 15800 and CS 18000.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=15900&enhanced=Y"
  },
  {
    "course_code": "CS 17600",
    "title": "",
    "credits": "3.00.  The course introduces students to programming fundamentals in Python, including loops, functions and different data types, and provides an introduction to data engineering including working with common data formats and learning the basics of data wrangling. Students will format, extract, clean, filter, transform, search, combine, summarize, aggregate, and visualize a diverse range of data sets. Python libraries including MatPlotLib and Pandas are used.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=17600&enhanced=Y"
  },
  {
    "course_code": "CS 17700",
    "title": "",
    "credits": "4.00.  Introduction to computers and programming: number representations, primitive data types and operations, basic control structures, programming applets and applications using graphical user interfaces, programming for detecting events and performing actions, processing multimedia objects such as images and sounds. Throughout the course, examples are drawn from a variety of fields in the natural sciences. Not open to CS majors with a grade of C or better in CS 18000. Not open to non-CS majors with a grade of C or better in any course in computer programming.",
    "description": "Configuration 1:  4.0 Credits",
    "offered_by": "Configuration 1:  4.0 Credits",
    "department": "Configuration 1:  4.0 Credits",
    "levels": "Configuration 1:  4.0 Credits",
    "schedule_types": "Configuration 1:  4.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=17700&enhanced=Y"
  },
  {
    "course_code": "CS 18000",
    "title": "",
    "credits": "4.00.  Problem solving and algorithms, implementation of algorithms in a high level programming language, conditionals, the iterative approach and debugging, collections of data, searching and sorting, solving problems by decomposition, the object-oriented approach, subclasses of existing classes, handling exceptions that occur when the program is running, graphical user interfaces (GUIs), data stored in files, abstract data types, a glimpse at topics from other CS courses. Intended primarily for students majoring in computer sciences. Credit cannot be obtained for both CS 18000 and any of 15600, 15800 and 15900. Not open to students with credit in CS 24000.",
    "description": "Configuration 1:  4.0 Credits",
    "offered_by": "Configuration 1:  4.0 Credits",
    "department": "Configuration 1:  4.0 Credits",
    "levels": "Configuration 1:  4.0 Credits",
    "schedule_types": "Configuration 1:  4.0 Credits",
    "prerequisites": "Configuration 1:  4.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=18000&enhanced=Y"
  },
  {
    "course_code": "CS 18200",
    "title": "",
    "credits": "3.00.  Logic and proofs; sets, functions, relations, sequences and summations; number representations; counting; fundamentals of the analysis of algorithms; graphs and trees; proof techniques; recursion; Boolean logic; finite state machines; pushdown automata; computability and undecidability.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=18200&enhanced=Y"
  },
  {
    "course_code": "CS 19000-002",
    "title": "",
    "credits": "1.00 to 5.00.  Topics vary. Permission of instructor required.",
    "description": "Configuration 1:  1.0-5.0 Credits",
    "offered_by": "Configuration 1:  1.0-5.0 Credits",
    "department": "Configuration 1:  1.0-5.0 Credits",
    "levels": "Configuration 1:  1.0-5.0 Credits",
    "schedule_types": "Configuration 1:  1.0-5.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=19000&enhanced=Y"
  },
  {
    "course_code": "CS 19700",
    "title": "",
    "credits": "1.00.  A seminar dealing with the history, context, and future of computer science. Open only to students in the Computer Sciences Honors Program. The credit may be used only toward free electives.",
    "description": "Configuration 1:  1.0 Credit",
    "offered_by": "Configuration 1:  1.0 Credit",
    "department": "Configuration 1:  1.0 Credit",
    "levels": "Configuration 1:  1.0 Credit",
    "schedule_types": "Configuration 1:  1.0 Credit",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=19700&enhanced=Y"
  },
  {
    "course_code": "CS 21100",
    "title": "",
    "credits": "2.00.\u00a0 CP1 teaches applied algorithmic ideas and problem solving techniques to solve programming interview and competitive programming questions including usage of basic data structures such as [array, set, map, stack, queue, deque, priority queue], the four main algorithm paradigms: [complete search, greedy, divide and conquer, dynamic programming], other algorithmic ideas including [binary search the answer/bisection, meet-in-the-middle, prefix sum and difference arrays, two pointers, sliding window], and basic graph algorithms covering [strongly/connected components, floodfill, topological sort, shortest paths].",
    "description": "Configuration 1:  2.0 Credits",
    "offered_by": "Configuration 1:  2.0 Credits",
    "department": "Configuration 1:  2.0 Credits",
    "levels": "Configuration 1:  2.0 Credits",
    "schedule_types": "Configuration 1:  2.0 Credits",
    "prerequisites": "Configuration 1:  2.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=21100&enhanced=Y"
  },
  {
    "course_code": "CS 24000",
    "title": "",
    "credits": "3.00.  The UNIX environment, C development cycle, data representation, operators, program structure, recursion, macros, C preprocessor, pointers and addresses, dynamic memory allocation, structures, unions, typedef, bit-fields, pointer/structure applications, UNIX file abstraction, file access, low-level I/O, concurrency.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=24000&enhanced=Y"
  },
  {
    "course_code": "CS 24200",
    "title": "",
    "credits": "3.00.  (STAT 24200) This course provides a broad introduction to the field of data science. The course focuses on using computational methods and statistical techniques to analyze massive amounts of data and to extract knowledge. It provides an overview of foundational computational and statistical tools for data acquisition and cleaning, data management and big data systems. The course surveys the complete data science process from data to knowledge and gives students hands-on experience with tools and methods. Basic knowledge of Python required. Computer Science majors cannot count this course as a degree requirement but can take it for credit as a free elective if taken before CS 37300, 34800, 47100, 47300, 44800.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=24200&enhanced=Y"
  },
  {
    "course_code": "CS 24300",
    "title": "",
    "credits": "3.00.  This course provides an introduction to foundational areas of artificial intelligence and current techniques for building intelligent systems. As an entry-level course for Artificial Intelligence, the primary goals of this course are: Teach fundamental building blocks of an intelligent system, namely, knowledge representation; learning; model validation, diagnosis, and visualization; reasoning and decision-making; probabilities and uncertainty in AI. Provide students with first-hand experiences in building a working machine learning and an automated reasoning system. Provide an overview of current state-of-the-art technologies in multiple domains of artificial intelligence. Broaden the students' horizon and spark their interests via learning about exciting applications of artificial intelligence in many aspects of human society.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=24300&enhanced=Y"
  },
  {
    "course_code": "CS 25000",
    "title": "",
    "credits": "4.00.  Digital logic: transistors, gates, and combinatorial circuits; clocks; registers and register banks; arithmetic-logic units; data representation: big-endian and little-endian integers; ones and twos complement arithmetic; signed and unsigned values; Von-Neumann architecture and bottleneck; instruction sets; RISC and CISC designs; instruction pipelines and stalls; rearranging code; memory and address spaces; physical and virtual memory; interleaving; page tables; memory caches; bus architecture; polling and interrupts; DMA; device programming; assembly language; optimizations; parallelism; data pipelining.",
    "description": "Configuration 1:  4.0 Credits",
    "offered_by": "Configuration 1:  4.0 Credits",
    "department": "Configuration 1:  4.0 Credits",
    "levels": "Configuration 1:  4.0 Credits",
    "schedule_types": "Configuration 1:  4.0 Credits",
    "prerequisites": "Configuration 1:  4.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=25000&enhanced=Y"
  },
  {
    "course_code": "CS 25100",
    "title": "",
    "credits": "3.00.  Running time analysis of algorithms and their implementations, one-dimensional data structures, trees, heaps, additional sorting algorithms, binary search trees, hash tables, graphs, directed graphs, weighted graph algorithms, additional topics.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=25100&enhanced=Y"
  },
  {
    "course_code": "CS 25200",
    "title": "",
    "credits": "4.00.  Low-level programming; review of addresses, pointers, memory layout, and data representation; text, data, and bss segments; debugging and hex dumps; concurrent execution with threads and processes; address spaces; file names; descriptors and file pointers; inheritance; system calls and library functions; standard I/O and string libraries; simplified socket programming; building tools to help programmers; make and make files; shell scripts and quoting; unix tools including sed, echo, test, and find; scripting languages such as awk; version control; object and executable files (.o and a.out); symbol tables; pointers to functions; hierarchical directories; and DNS hierarchy; programming embedded systems.",
    "description": "Configuration 1:  4.0 Credits",
    "offered_by": "Configuration 1:  4.0 Credits",
    "department": "Configuration 1:  4.0 Credits",
    "levels": "Configuration 1:  4.0 Credits",
    "schedule_types": "Configuration 1:  4.0 Credits",
    "prerequisites": "Configuration 1:  4.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=25200&enhanced=Y"
  },
  {
    "course_code": "CS 25300",
    "title": "",
    "credits": "3.00.  This course gives a broad introduction to the most important data structures and algorithms in computer science. The emphasis is on data structures and their use in algorithms relevant for data science and AI and their applications. The course focuses on developing and comparing efficient implementations, assessing suitability of data structures for massive data sets, and understanding effective use, modifications, and extensions. This course will not fulfill CS 25100 requirement for any Computer Science major or minor.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=25300&enhanced=Y"
  },
  {
    "course_code": "CS 30700",
    "title": "",
    "credits": "3.00.  An introduction to the methods and tools of software engineering; software life cycle; specification and design of software, software testing, cost and effort estimation; laboratory exercises with design, testing, and other tools.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=30700&enhanced=Y"
  },
  {
    "course_code": "CS 31100",
    "title": "",
    "credits": "2.00.\u00a0 CP2 teaches experienced programmers additional techniques to solve interview and competitive programming problems and builds on material learned in CP1. This includes specific algorithmic techniques such as [shortest paths, topological sort, MST, union find, range queries], advanced algorithms surrounding trees and DAGs, advanced problem types in [dynamic programming, backtracking/simulation, mathematics, string processing], and more. It can be viewed as a programming complement to CS 38100, with some overlap in content.",
    "description": "Configuration 1:  2.0 Credits",
    "offered_by": "Configuration 1:  2.0 Credits",
    "department": "Configuration 1:  2.0 Credits",
    "levels": "Configuration 1:  2.0 Credits",
    "schedule_types": "Configuration 1:  2.0 Credits",
    "prerequisites": "Configuration 1:  2.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=31100&enhanced=Y"
  },
  {
    "course_code": "CS 33400",
    "title": "",
    "credits": "3.00.  Fundamental principles and techniques of computer graphics. The course covers the basics of going from a scene representation to a raster image using OpenGL. Specific topics include coordinate manipulations, perspective, basics of illumination and shading, color models, texture maps, clipping and basic raster algorithms, fundamentals of scene constructions. CS 31400 is recommended.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=33400&enhanced=Y"
  },
  {
    "course_code": "CS 34800",
    "title": "",
    "credits": "3.00.  File organization and index structures; object-oriented database languages; the relational database model with introductions to SQL and DBMS; hierarchical models and network models with introductions to HDDL, HDML, and DBTG Codasyl; data mining; data warehousing; database connectivity; distributed databases; the client/server paradigm; middleware, including ODBC, JDBC, CORBA, and MOM.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=34800&enhanced=Y"
  },
  {
    "course_code": "CS 35100",
    "title": "",
    "credits": "3.00.\u00a0 Introduction to cloud computing. Cloud data center infrastructure, public and private clouds, servers and virtualized servers, data center networks and virtualized networks, virtualized disk, file, and object storage, the concept of scale-out, algorithms and programming systems used in the design and implementation of cloud-native software, especially using containers and orchestration systems, microservices, serverless designs,\u00a0controller-based designs, edge and fog computing, security in a cloud environment, programming models.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=35100&enhanced=Y"
  },
  {
    "course_code": "CS 35200",
    "title": "",
    "credits": "3.00.  Should not be taken concurrently with CS 35400. The theory and practice of programming language translation, compilation, and run-time systems, organized around a significant programming project to build a compiler for a simple but nontrivial programming language. Modules, interfaces, tools. Data structures for tree languages. Lexical analysis, syntax analysis, abstract syntax. Symbol tables, semantic analysis. Translation, intermediate code, basic blocks, traces. Instruction selection, CISC and RISC machines. Liveness analysis, graph coloring register allocation. Supplemental material drawn from garbage collection, object-oriented languages, higher-order languages, dataflow analysis, optimization, polymorphism, scheduling and pipelining, memory hierarchies.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=35200&enhanced=Y"
  },
  {
    "course_code": "CS 35400",
    "title": "",
    "credits": "3.00.  Should not be taken concurrently with CS 35200. Introduction to operating systems. Computer system and operating system architectures, processes, inter-process communication, inter-process synchronization, mutual exclusion, deadlocks, memory hierarchy, virtual memory, CPU scheduling, file systems, I/O device management, security.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=35400&enhanced=Y"
  },
  {
    "course_code": "CS 35500",
    "title": "",
    "credits": "3.00.  An introduction to cryptography basics: Classic historical ciphers including Caesar, Vigenere and Vernam ciphers; modern ciphers including DES, AES, Pohlig-Hellman, and RSA; signatures and digests; key exchange; simple protocols; block and stream ciphers; network-centric protocols.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=35500&enhanced=Y"
  },
  {
    "course_code": "CS 36100",
    "title": "",
    "credits": "3.00.  This course provides an overview of current and essential professional and ethical issues in computing and their impact on society. Topics specialize in the impact of computing, including algorithmic bias, motives behind design decisions, data ethics, privacy and security, and legal issues. The goal of this course is to equip students with the framework and context necessary to think critically about the impact of computing. Discussions and readings will include current events.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=36100&enhanced=Y"
  },
  {
    "course_code": "CS 37300",
    "title": "",
    "credits": "3.00.  This course will introduce students to the field of data mining and machine learning, which sits at the interface between statistics and computer science. Data mining and machine learning focuses on developing algorithms to automatically discover patterns and learn models of large datasets. This course introduces students to the process and main techniques in data mining and machine learning, including exploratory data analysis, predictive modeling, descriptive modeling, and evaluation.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=37300&enhanced=Y"
  },
  {
    "course_code": "CS 38003",
    "title": "",
    "credits": "1.00.  This course teaches the Python programming language assuming that students have already taken a course in computer programming. This 5-week one-credit course teaches the Python language, the most common modules used in Python, as well as how to write Python web applications.",
    "description": "Configuration 1:  1.0 Credit",
    "offered_by": "Configuration 1:  1.0 Credit",
    "department": "Configuration 1:  1.0 Credit",
    "levels": "Configuration 1:  1.0 Credit",
    "schedule_types": "Configuration 1:  1.0 Credit",
    "prerequisites": "Configuration 1:  1.0 Credit",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=38003&enhanced=Y"
  },
  {
    "course_code": "CS 38100",
    "title": "",
    "credits": "3.00.  Techniques for analyzing the time and space requirements of algorithms. Application of these techniques to sorting, searching, pattern-matching, graph problems, and other selected problems. Brief introduction to the intractable (NP-hard) problems.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=38100&enhanced=Y"
  },
  {
    "course_code": "CS 39000-AF1",
    "title": "",
    "credits": "1.00 to 5.00.  Topics vary. Permission of instructor required.",
    "description": "Configuration 1:  1.0-5.0 Credits",
    "offered_by": "Configuration 1:  1.0-5.0 Credits",
    "department": "Configuration 1:  1.0-5.0 Credits",
    "levels": "Configuration 1:  1.0-5.0 Credits",
    "schedule_types": "Configuration 1:  1.0-5.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=39000&enhanced=Y"
  },
  {
    "course_code": "CS 39000-AF2",
    "title": "",
    "credits": "1.00 to 5.00.  Topics vary. Permission of instructor required.",
    "description": "Configuration 1:  1.0-5.0 Credits",
    "offered_by": "Configuration 1:  1.0-5.0 Credits",
    "department": "Configuration 1:  1.0-5.0 Credits",
    "levels": "Configuration 1:  1.0-5.0 Credits",
    "schedule_types": "Configuration 1:  1.0-5.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=39000&enhanced=Y"
  },
  {
    "course_code": "CS 39000-AF3",
    "title": "",
    "credits": "1.00 to 5.00.  Topics vary. Permission of instructor required.",
    "description": "Configuration 1:  1.0-5.0 Credits",
    "offered_by": "Configuration 1:  1.0-5.0 Credits",
    "department": "Configuration 1:  1.0-5.0 Credits",
    "levels": "Configuration 1:  1.0-5.0 Credits",
    "schedule_types": "Configuration 1:  1.0-5.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=39000&enhanced=Y"
  },
  {
    "course_code": "CS 40700",
    "title": "",
    "credits": "3.00.  A capstone course combining all the concepts students have learned in the Software Engineering Track: software and software engineering, working as a team leader and as a team member, Agile Software Development, Scrum Software Development, Version Control, basing software development on reusable technology, developing requirements (User Stories and Use Cases), modelling with classes, design patterns, focusing on users, modelling interactions and behavior, architecting and designing software, testing and inspecting, managing the software development process. This is a project course. Students are organized into 4-6 student teams. Each team completes a full-semester software engineering project. Each team creates a Project Charter, Product Backlog, Design, and for 3 Sprints -- Planning Document, Demo, Retrospective Document. The final demo is a formal presentation.",
    "description": "Configuration 2:  3.0 Credits",
    "offered_by": "Configuration 2:  3.0 Credits",
    "department": "Configuration 2:  3.0 Credits",
    "levels": "Configuration 2:  3.0 Credits",
    "schedule_types": "Configuration 2:  3.0 Credits",
    "prerequisites": "Configuration 2:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=40700&enhanced=Y"
  },
  {
    "course_code": "CS 40800",
    "title": "",
    "credits": "3.00.  Preliminaries: errors and testing; software quality, requirements, behavior, and correctness; testing, debugging, verification; control flow graphs, dominators; types of testing; Test selection: from requirements, finite state models, and combinatorial designs; regression testing and test minimization; Test adequacy assessment: control and data flow; mutation based; testing tools.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=40800&enhanced=Y"
  },
  {
    "course_code": "CS 41100",
    "title": "",
    "credits": "2.00.\u00a0 CP3 teaches experienced programmers additional techniques to solve competitive programming problems and builds on material learned in CP1 and CP2. This includes algorithmic techniques in topics such as [network flow, computational geometry, graph matching, NP-hard problems]. Primarily, CP3 prepares students to compete in programming contests, which means most class time is focused on simulating contest environments and teaching teamwork and communication alongside problem practice.",
    "description": "Configuration 1:  2.0 Credits",
    "offered_by": "Configuration 1:  2.0 Credits",
    "department": "Configuration 1:  2.0 Credits",
    "levels": "Configuration 1:  2.0 Credits",
    "schedule_types": "Configuration 1:  2.0 Credits",
    "prerequisites": "Configuration 1:  2.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=41100&enhanced=Y"
  },
  {
    "course_code": "CS 42200",
    "title": "",
    "credits": "3.00.  Undergraduate-level introduction to computer networks and data communication. Low-level details of media, signals, and bits: time division and frequency division multiplexing; encoding; modulation; bandwidth, throughput, and noise. Packet transmission: Local Area Network (Ethernet, FDDI) and Wide Area Network technologies (ATM); wireless networks; network interconnection with repeaters, bridges, and switches; DSU/CSU; xDSL and cable modems. Internetworking: router-based architecture; IP addressing; address binding with ARP; datagram encapsulation and fragmentation; UDP and TCP, retransmission; protocol ports; ICMP and error handling. Network applications: client/server concept; port demultiplexing; program interface to protocols (API); use by clients and servers; domain name system; TELNET; Web technologies including HTTP, CGI, Java; RPC and middleware; network management.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=42200&enhanced=Y"
  },
  {
    "course_code": "CS 42600",
    "title": "",
    "credits": "3.00.  A survey of the fundamentals of information security. Risks and vulnerabilities, policy formation, controls and protection methods, database security, encryption, authentication technologies, host-based and network-based security issues, personnel and physical security issues, issues of law and privacy.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=42600&enhanced=Y"
  },
  {
    "course_code": "CS 44000",
    "title": "",
    "credits": "3.00.  This course provides an integrated view of the key concepts of modern algorithmic data analytics. It focuses on teaching principles and methods needed to analyze large datasets in order to extract novel, transformative insights for the underlying application. The course emphasizes the duality between formulating questions that can be answered by statistical data analysis tools (the statistical perspective) and the algorithmic challenge of actually extracting such answers using available parallel and distributed computational resources from massive datasets. The topics cover three areas: (1) algorithmic concepts necessary for big data analytics, (2) bid data systems, including data management and programming, and (3) advanced analytic methods to address characteristics of real-world big data problems.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=44000&enhanced=Y"
  },
  {
    "course_code": "CS 44100",
    "title": "",
    "credits": "3.00.  The Capstone course aims at providing students with an opportunity to integrate their accumulated knowledge and technical and social skills in order to identify and solve realistic or real-world data science problem, with an emphasis on the application domain. Capstone projects are often sponsored by corporate partners or by academic or non-academic research groups. The Capstone course serves as preparation for students entering into the profession of Data Science. Students will conduct a team-based project through the entire data science pipeline, by following the six phases of the CRISP-DM (Cross-Industry Standard Process for Data Mining) methodology. Students get experience in working as teams, participating in project planning, writing reports, and giving presentations.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=44100&enhanced=Y"
  },
  {
    "course_code": "CS 44800",
    "title": "",
    "credits": "3.00.  An in-depth examination of relational database systems including theory and concepts as well as practical issues in relational databases. Modern database technologies such as object-relational and Web-based access to relational databases. Conceptual design and entity relationship modeling, relational algebra and calculus, data definition and manipulation languages using SQL, schema and view management, query processing and optimization, transaction management, security, privacy, integrity management.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=44800&enhanced=Y"
  },
  {
    "course_code": "CS 45800",
    "title": "",
    "credits": "3.00.  Any intelligent robot system interacting with our environment needs to have perception, planning, and control methods in its cognition process. The perception module outlines the robot's procedures to gather and interpret sensory observations into world models. The underlying planning and control modules use those world models to plan robot behaviors and their interaction with our natural environments. Therefore, this course will cover the fundamental topics in robot perception, planning, and control to design general-purpose robot cognition algorithms. Overall, this course is divided into four modules: Robot perception: This covers fundamental techniques needed for robot localization and mapping from raw 3D sensory data. Robot planning: This module will discuss robot behavior planning techniques such as A*, RRT*, and trajectory optimization. Robot Control: This introduces basic control techniques such as PID controller to execute the robot's planned behaviors in the real world. Robot Learning: This part will briefly introduce machine learning techniques for robot decision-making and control.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=45800&enhanced=Y"
  },
  {
    "course_code": "CS 47100",
    "title": "",
    "credits": "3.00.  Students are expected to spend at least three hours per week gaining experience with artificial intelligence systems and developing software. Basic problem-solving strategies, heuristic search, problem reduction and AND/OR graphs, knowledge representation, expert systems, generating explanations, uncertainty reasoning, game playing, planning, machine learning, computer vision, and programming systems such as Lisp or Prolog.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=47100&enhanced=Y"
  },
  {
    "course_code": "CS 47500",
    "title": "",
    "credits": "3.00. The goal of this course is to teach students how to design useful and usable interactive systems that address important needs of people. Students will experience the entire user-centered design life cycle, from need finding to usability evaluation. Topics covered in the course include user-centered design principles, usability heuristics, need-finding methods such as semi-structured interviews and contextual inquiry, quick prototyping techniques, usability evaluation methods such as hallway testing and human-subjects user study, and theories about user interaction and decision making. As we are entering a new era of AI, the course will also include a brief introduction on how to apply the HCI principles and techniques to AI-powered systems. This course is project-based. Students will form project teams among themselves to work on a semester-long project and apply the user-centered design principles, theories, and techniques that they have learned in class to build a useful and usable interactive system such as a mobile application. This course is also highly interactive, including a series of design studios and in-class activities that require active participation, communication, and discussion with other students.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=47500&enhanced=Y"
  },
  {
    "course_code": "CS 48900",
    "title": "",
    "credits": "3.00.  Software for embedded systems; programming with extreme constraints on memory, storage, and processing power; programming models, including synchronous, asynchronous, and concurrent; programming systems that run forever; use of Finite State Machines (FSMs); review of embedded hardware and available boards; asynchronous and synchronous serial connections (e.g., RS232 and SPI); General Purpose I/O (GPIO) pins; relays, servos, and other peripherals; design for low power; battery characteristics; systems that communicate over computer networks and the Internet; current industry practices; design of embedded projects; working in teams. CS 35200 (Compilers) and CS 35400 (Operating Systems) are recommended, but not required.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=48900&enhanced=Y"
  },
  {
    "course_code": "CS 49000-NLP",
    "title": "",
    "credits": "1.00 to 5.00.  Supervised reading and reports in various fields. Permission of instructor required.",
    "description": "Configuration 1:  1.0-5.0 Credits",
    "offered_by": "Configuration 1:  1.0-5.0 Credits",
    "department": "Configuration 1:  1.0-5.0 Credits",
    "levels": "Configuration 1:  1.0-5.0 Credits",
    "schedule_types": "Configuration 1:  1.0-5.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=49000&enhanced=Y"
  },
  {
    "course_code": "CS 49000-SWS",
    "title": "",
    "credits": "1.00 to 5.00.  Supervised reading and reports in various fields. Permission of instructor required.",
    "description": "Configuration 1:  1.0-5.0 Credits",
    "offered_by": "Configuration 1:  1.0-5.0 Credits",
    "department": "Configuration 1:  1.0-5.0 Credits",
    "levels": "Configuration 1:  1.0-5.0 Credits",
    "schedule_types": "Configuration 1:  1.0-5.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=49000&enhanced=Y"
  },
  {
    "course_code": "CS 49700",
    "title": "",
    "credits": "3.00.  One semester of the project may be counted as one of the seven computer science courses at or above the 300 level required for the bachelor's degree. One more semester, if approved by the honors coordinator, can be used as a free elective. A group research project directed by Computer Sciences faculty members. Each group must submit a technical report describing its work and the results obtained.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=49700&enhanced=Y"
  },
  {
    "course_code": "CS 15900",
    "title": "",
    "credits": "3.00.  Fundamental principles, concepts, and methods of programming in C, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; and use of programming logic in solving engineering problems. Students are expected to complete assignments in a collaborative learning environment. Credit cannot be obtained for both CS 15900 and any of CS 15600, CS 15800 and CS 18000.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=15900&enhanced=Y"
  },
  {
    "course_code": "CS 18000",
    "title": "",
    "credits": "4.00.  Problem solving and algorithms, implementation of algorithms in a high level programming language, conditionals, the iterative approach and debugging, collections of data, searching and sorting, solving problems by decomposition, the object-oriented approach, subclasses of existing classes, handling exceptions that occur when the program is running, graphical user interfaces (GUIs), data stored in files, abstract data types, a glimpse at topics from other CS courses. Intended primarily for students majoring in computer sciences. Credit cannot be obtained for both CS 18000 and any of 15600, 15800 and 15900. Not open to students with credit in CS 24000.",
    "description": "Configuration 1:  4.0 Credits",
    "offered_by": "Configuration 1:  4.0 Credits",
    "department": "Configuration 1:  4.0 Credits",
    "levels": "Configuration 1:  4.0 Credits",
    "schedule_types": "Configuration 1:  4.0 Credits",
    "prerequisites": "Configuration 1:  4.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=18000&enhanced=Y"
  },
  {
    "course_code": "CS 18200",
    "title": "",
    "credits": "3.00.  Logic and proofs; sets, functions, relations, sequences and summations; number representations; counting; fundamentals of the analysis of algorithms; graphs and trees; proof techniques; recursion; Boolean logic; finite state machines; pushdown automata; computability and undecidability.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=18200&enhanced=Y"
  },
  {
    "course_code": "CS 21100",
    "title": "",
    "credits": "2.00.\u00a0 CP1 teaches applied algorithmic ideas and problem solving techniques to solve programming interview and competitive programming questions including usage of basic data structures such as [array, set, map, stack, queue, deque, priority queue], the four main algorithm paradigms: [complete search, greedy, divide and conquer, dynamic programming], other algorithmic ideas including [binary search the answer/bisection, meet-in-the-middle, prefix sum and difference arrays, two pointers, sliding window], and basic graph algorithms covering [strongly/connected components, floodfill, topological sort, shortest paths].",
    "description": "Configuration 1:  2.0 Credits",
    "offered_by": "Configuration 1:  2.0 Credits",
    "department": "Configuration 1:  2.0 Credits",
    "levels": "Configuration 1:  2.0 Credits",
    "schedule_types": "Configuration 1:  2.0 Credits",
    "prerequisites": "Configuration 1:  2.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=21100&enhanced=Y"
  },
  {
    "course_code": "CS 24000",
    "title": "",
    "credits": "3.00.  The UNIX environment, C development cycle, data representation, operators, program structure, recursion, macros, C preprocessor, pointers and addresses, dynamic memory allocation, structures, unions, typedef, bit-fields, pointer/structure applications, UNIX file abstraction, file access, low-level I/O, concurrency.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=24000&enhanced=Y"
  },
  {
    "course_code": "CS 25000",
    "title": "",
    "credits": "4.00.  Digital logic: transistors, gates, and combinatorial circuits; clocks; registers and register banks; arithmetic-logic units; data representation: big-endian and little-endian integers; ones and twos complement arithmetic; signed and unsigned values; Von-Neumann architecture and bottleneck; instruction sets; RISC and CISC designs; instruction pipelines and stalls; rearranging code; memory and address spaces; physical and virtual memory; interleaving; page tables; memory caches; bus architecture; polling and interrupts; DMA; device programming; assembly language; optimizations; parallelism; data pipelining.",
    "description": "Configuration 1:  4.0 Credits",
    "offered_by": "Configuration 1:  4.0 Credits",
    "department": "Configuration 1:  4.0 Credits",
    "levels": "Configuration 1:  4.0 Credits",
    "schedule_types": "Configuration 1:  4.0 Credits",
    "prerequisites": "Configuration 1:  4.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=25000&enhanced=Y"
  },
  {
    "course_code": "CS 25100",
    "title": "",
    "credits": "3.00.  Running time analysis of algorithms and their implementations, one-dimensional data structures, trees, heaps, additional sorting algorithms, binary search trees, hash tables, graphs, directed graphs, weighted graph algorithms, additional topics.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=25100&enhanced=Y"
  },
  {
    "course_code": "CS 25200",
    "title": "",
    "credits": "4.00.  Low-level programming; review of addresses, pointers, memory layout, and data representation; text, data, and bss segments; debugging and hex dumps; concurrent execution with threads and processes; address spaces; file names; descriptors and file pointers; inheritance; system calls and library functions; standard I/O and string libraries; simplified socket programming; building tools to help programmers; make and make files; shell scripts and quoting; unix tools including sed, echo, test, and find; scripting languages such as awk; version control; object and executable files (.o and a.out); symbol tables; pointers to functions; hierarchical directories; and DNS hierarchy; programming embedded systems.",
    "description": "Configuration 1:  4.0 Credits",
    "offered_by": "Configuration 1:  4.0 Credits",
    "department": "Configuration 1:  4.0 Credits",
    "levels": "Configuration 1:  4.0 Credits",
    "schedule_types": "Configuration 1:  4.0 Credits",
    "prerequisites": "Configuration 1:  4.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=25200&enhanced=Y"
  },
  {
    "course_code": "CS 25300",
    "title": "",
    "credits": "3.00.  This course gives a broad introduction to the most important data structures and algorithms in computer science. The emphasis is on data structures and their use in algorithms relevant for data science and AI and their applications. The course focuses on developing and comparing efficient implementations, assessing suitability of data structures for massive data sets, and understanding effective use, modifications, and extensions. This course will not fulfill CS 25100 requirement for any Computer Science major or minor.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=25300&enhanced=Y"
  },
  {
    "course_code": "CS 30700",
    "title": "",
    "credits": "3.00.  An introduction to the methods and tools of software engineering; software life cycle; specification and design of software, software testing, cost and effort estimation; laboratory exercises with design, testing, and other tools.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=30700&enhanced=Y"
  },
  {
    "course_code": "CS 34800",
    "title": "",
    "credits": "3.00.  File organization and index structures; object-oriented database languages; the relational database model with introductions to SQL and DBMS; hierarchical models and network models with introductions to HDDL, HDML, and DBTG Codasyl; data mining; data warehousing; database connectivity; distributed databases; the client/server paradigm; middleware, including ODBC, JDBC, CORBA, and MOM.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=34800&enhanced=Y"
  },
  {
    "course_code": "CS 36100",
    "title": "",
    "credits": "3.00.  This course provides an overview of current and essential professional and ethical issues in computing and their impact on society. Topics specialize in the impact of computing, including algorithmic bias, motives behind design decisions, data ethics, privacy and security, and legal issues. The goal of this course is to equip students with the framework and context necessary to think critically about the impact of computing. Discussions and readings will include current events.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=36100&enhanced=Y"
  },
  {
    "course_code": "CS 38003",
    "title": "",
    "credits": "1.00.  This course teaches the Python programming language assuming that students have already taken a course in computer programming. This 5-week one-credit course teaches the Python language, the most common modules used in Python, as well as how to write Python web applications.",
    "description": "Configuration 1:  1.0 Credit",
    "offered_by": "Configuration 1:  1.0 Credit",
    "department": "Configuration 1:  1.0 Credit",
    "levels": "Configuration 1:  1.0 Credit",
    "schedule_types": "Configuration 1:  1.0 Credit",
    "prerequisites": "Configuration 1:  1.0 Credit",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=38003&enhanced=Y"
  },
  {
    "course_code": "CSCI 31700",
    "title": "",
    "credits": "3.00.  P: N207 or equivalent. This course gives a survey and overview of popular computational software used in multiple scientific domains to support data processing and scientific research. This class focuses on teaching how to use software to efficiently process data in terms of modeling, simulating, visualizing and data-mining. Fundamental concepts related to scientific computing are introduced briefly.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CSCI&cnbr=31700&enhanced=Y"
  },
  {
    "course_code": "CSCI 36300",
    "title": "",
    "credits": "3.00.  (ECE 37200) This course is designed to teach students best practices in designing and implementing object-oriented systems of high quality. To accomplish this task, we start with an overview of software design patterns and their role in developing high-quality software. We then begin surveying different design-level software design patterns, such as the Bridge, Strategy, Wrapper Facade, and Visitor software design patterns. Next, we touch on software design patterns for building distributed systems. Finally, we finish the course by surveying software anti-patterns, which are common design mistakes that negatively impact system quality, such as degrading performance as the system scales in size and complexity. Students will have the opportunity to apply learned techniques on several programming projects throughout the semester.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CSCI&cnbr=36300&enhanced=Y"
  },
  {
    "course_code": "CSCI 40300",
    "title": "",
    "credits": "3.00.  Operating system concepts; history, evolution and philosophy of operating systems. Concurrent processes, process coordination and synchronization, CPU scheduling, deadlocks, memory management, virtual memory, secondary storage and file management, device management, security and protection, networking, distributed and real-time systems.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CSCI&cnbr=40300&enhanced=Y"
  },
  {
    "course_code": "CSCI 41400",
    "title": "",
    "credits": "3.00.  Error analysis, solution of nonlinear equations, direct and iterative methods for solving linear systems, approximation of functions, numerical differentiation and integration, numerical solution of ordinary differential equations. Not open to students with credit in CSCI 512.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CSCI&cnbr=41400&enhanced=Y"
  },
  {
    "course_code": "CSCI 43200",
    "title": "",
    "credits": "3.00.  An introduction to computing security to include Cryptography; Identity and authentication; Software security; Operating system security; Trusted operating system design and evaluation; Network threats and defenses; Security management; legal aspects of security; Privacy and ethics.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CSCI&cnbr=43200&enhanced=Y"
  },
  {
    "course_code": "CSCI 44300",
    "title": "",
    "credits": "3.00.  Relational database systems: architecture, theory, and application. Relational data structure, integrity rules, mathematical description, data manipulation. Standard SQL and its data manipulation language, engineering aspects of database design in industry, introduction to non-relational database systems.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CSCI&cnbr=44300&enhanced=Y"
  },
  {
    "course_code": "CSCI 44800",
    "title": "",
    "credits": "3.00.  Biometrics is capturing and using physiological or behavioral characteristics for personal identification. It is set to become the successor to the PIN. This course will introduce computational methods for the implementation of various biometric technologies including face and voice recognition, finger print and iris identification, and DNA matching.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CSCI&cnbr=44800&enhanced=Y"
  },
  {
    "course_code": "CSCI 48100",
    "title": "",
    "credits": "3.00.  An introduction to data warehousing and OLAP technology for data mining; data processing; data mining primitives, languages and systems; descriptive data mining; characterization and comparison; association analysis; classification and prediction; cluster analysis; mining complex types of data; applications and trends in data mining. Course taught via Indiana University consortium.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CSCI&cnbr=48100&enhanced=Y"
  },
  {
    "course_code": "CSCI 48400",
    "title": "",
    "credits": "3.00.  Introduction to formal languages and automata theory; finite automata, regular expressions, regular languages, context-free languages and pushdown automata, context sensitive languages, Turing machines, undecidability, P and NP.  Design and analysis techniques for divide-and-conquer algorithms, greedy algorithms, dynamic programing, amortized analysis.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CSCI&cnbr=48400&enhanced=Y"
  },
  {
    "course_code": "CSCI 48900",
    "title": "",
    "credits": "3.00.  The course will cover data manipulation, analysis, and visualization. Statistical modeling, dimension reduction and techniques of supervised and unsupervised learning. Introduction to software technologies used in data science and applications in science, government and industry.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CSCI&cnbr=48900&enhanced=Y"
  },
  {
    "course_code": "CSCI 49000-NLP",
    "title": "",
    "credits": "1.00 to 5.00.  Supervised reading and reports in various fields. Permission from department required.",
    "description": "Configuration 1:  1.0 Credit",
    "offered_by": "Configuration 1:  1.0 Credit",
    "department": "Configuration 1:  1.0 Credit",
    "levels": "Configuration 1:  1.0 Credit",
    "schedule_types": "Configuration 1:  1.0 Credit",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CSCI&cnbr=49000&enhanced=Y"
  },
  {
    "course_code": "CSCI 49500",
    "title": "",
    "credits": "1.00 to 6.00.  Explorations in Applied Computing is an undergraduate capstone experience. Students will work in teams, advised by faculty and external liaisons, to solve real-world computing problems. This hands-on experience will cultivate technical expertise, utilization of analytical thinking, quantitative reasoning, project management skills, and communication skills.",
    "description": "Configuration 1:  1.0-6.0 Credits",
    "offered_by": "Configuration 1:  1.0-6.0 Credits",
    "department": "Configuration 1:  1.0-6.0 Credits",
    "levels": "Configuration 1:  1.0-6.0 Credits",
    "schedule_types": "Configuration 1:  1.0-6.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CSCI&cnbr=49500&enhanced=Y"
  },
  {
    "course_code": "CS 50200",
    "title": "",
    "credits": "3.00.  Basic principles of compilers and compiler design; control of translation, loading, and execution; symbolic coding systems; lexical and syntactic analysis, design and operation of assemblers and macro processors; design of interpretive systems. Students are expected to complete a large programming project as part of the course.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=50200&enhanced=Y"
  },
  {
    "course_code": "CS 50300",
    "title": "",
    "credits": "3.00.  Basic principles of operating systems: addressing modes, indexing, relative addressing, indirect addressing, stack maintenance; implementation of multitask systems; control and coordination of tasks, deadlocks, synchronization, mutual exclusion; storage management, segmentation, paging, virtual memory; protection, sharing, access control; file systems; resource management; evaluation and prediction of performance. Students are expected to spend at least three hours per week gaining hands-on experience in using and modifying a small operating system.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=50300&enhanced=Y"
  },
  {
    "course_code": "CS 51400",
    "title": "",
    "credits": "3.00.  (MA 51400)  AIternative methods for solving nonlinear equations; linear difference equations, applications to solution of polynomial equations; differentiation and integration formulas; numerical solution of ordinary differential equations; roundoff error bounds.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=51400&enhanced=Y"
  },
  {
    "course_code": "CS 52300",
    "title": "",
    "credits": "3.00.  This course focuses on social, legal, and economic aspects of information security and privacy, also including ethics, policies, and human behavioral issues. The course covers the interactions between non-technological aspects of information security as well as relevant technological aspects. It focuses on how non-technological facets can inform and guide technological choices, and how technological choices can enhance or detract from the broader organizational and societal goals.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=52300&enhanced=Y"
  },
  {
    "course_code": "CS 52500",
    "title": "",
    "credits": "3.00.  Parallel computing for science and engineering applications: parallel programming and performance evaluation, parallel libraries and problem-solving environments, models of parallel computing and run-time support systems, and selected applications..",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=52500&enhanced=Y"
  },
  {
    "course_code": "CS 52700",
    "title": "",
    "credits": "3.00.  This course focuses on software security fundamentals, secure coding guidelines and principles, and advanced software security concepts. Students will learn to assess and understand threats, learn how to design and implement secure software systems, and get hands-on experience with common security pitfalls. Restricted to CS MS and CS PHD students. Significant programming experience and skills are required to complete the labs and projects.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=52700&enhanced=Y"
  },
  {
    "course_code": "CS 52800",
    "title": "",
    "credits": "3.00.  The course focuses on the principles and foundations of building secure network systems and on security and privacy challenges in existing and emerging networks. The course compares and analyzes network architectures and network protocols from the physical layer to the access control, network, transport and application layer from an adversarial standpoint to understand how to build more secure protocols that can withstand attacks. Restricted to CS MS and CS PHD students. Significant programming experience and skills are required to complete the projects.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=52800&enhanced=Y"
  },
  {
    "course_code": "CS 53000",
    "title": "",
    "credits": "3.00.  Teaches the fundamentals of scientific visualization and prepares students to apply these techniques in fields such as astronomy, biology, chemistry, engineering, and physics. Emphasis is on the representation of scalar, vector, and tensor fields; data sampling and resampling; and reconstruction using multivariate finite elements (surfaces, volumes, and surfaces on surfaces).",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=53000&enhanced=Y"
  },
  {
    "course_code": "CS 53500",
    "title": "",
    "credits": "3.00.  (ME 57300) The principles of computer graphics and interactive graphical methods for problem solving. Emphasis placed on both development and use of graphical tools for various display devices. Several classes of graphics hardware considered in detail. Topics include pen plotting, storage tubes, refresh, dynamic techniques, three dimensions, color, modeling of geometry, and hidden surface removal. Part of the laboratory involves use of an interactive minicomputer graphics system. Knowledge of programming required.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=53500&enhanced=Y"
  },
  {
    "course_code": "CS 53600",
    "title": "",
    "credits": "3.00.  Data communications: communication hardware technologies including local area and longhaul network hardware, circuit and packet switching, interfaces between computer and network hardware, and performance issues. Network architecture: protocol software and conceptual layering, reliable delivery over an unreliable channel, transport protocols, virtual circuits, datagrams, internetworking as a fundamental design concept, the client-server paradigm, naming and name binding, name servers, addressing and address resolution, routing and routing algorithms, congestion and flow control techniques, network file systems, distribution of computation, and DARPA internet protocols (TCP/IP) as examples of protocol organization.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=53600&enhanced=Y"
  },
  {
    "course_code": "CS 54100",
    "title": "",
    "credits": "3.00.  Fundamentals for the logical design of database systems. The entity-relationship model, semantic model, relational model, hierarchical model, network model. Implementations of the models. Design theory for relational databases. Design of query languages and the use of semantics for query optimization. Design and verification of integrity assertions, and security. Introduction to intelligent query processing and database machines.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=54100&enhanced=Y"
  },
  {
    "course_code": "CS 55100",
    "title": "",
    "credits": "3.00.  A comprehensive course that investigates all aspects of cloud computing, including: cloud data centers and infrastructure (equipment for processing, storage, communication, and special-purpose facilities); the use of virtualized servers (virtual machines and containers), virtualized storage (Storage Area Networks, Network Attached Storage, object storage), and virtual networks; automation; orchestration systems, such as Kubernetes; programming paradigms used to construct cloud-native software, such as MapReduce, microservices, controllerbased computing, and serverless computing; edge computing; security and privacy in cloud systems; software models. The course emphasizes researching new ways to use cloud computing and research into new ways to design and build cloud systems. The course includes a project. Students should have completed coursework in or have equivalent familiarity with operating systems and computer networks.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=55100&enhanced=Y"
  },
  {
    "course_code": "CS 55800",
    "title": "",
    "credits": "3.00.  Intelligent robot systems are in high demand in many real-world tasks, leading to growing interest in designing scalable robot algorithms for automation. From improving healthcare systems to enhancing the manufacturing capacity of various industrial sectors, the role of Robotics has been acknowledged worldwide. They are now also being considered as necessary tools to build large-scale assistive technologies such as smart vehicles and delivery drones to improve people's quality of life. This course covers topics in robot motion planning, estimation, learning, and control to design algorithms for robots to safely interact with their environments and perform various challenging tasks under constraints. The first part of this course focuses on classical techniques such as search, sampling-based planning, PID control, Model Predictive Control (MPC), and Bayesian Kalman filters. The second part covers modern imitation learning and deep reinforcement learning techniques and their application to planning and decision-making in robotics. The course assumes students are familiar with basic concepts in linear algebra, optimization, elementary probability, statistics, data structures, and algorithms. Students are expected to have good programming and software development skills and have a working knowledge of Python.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=55800&enhanced=Y"
  },
  {
    "course_code": "CS 56500",
    "title": "",
    "credits": "3.00.  An exploration of modern or unconventional concepts of programming languages, their semantics, and their implementations; abstract data types; axiomatic semantics using Hoare's logic and Dijkstra's predicate transformers; denotational semantics; functional, object-oriented, and logic programming; concurrency and Owicki-Gries theory. Example languages include ML, Ada, Oberon, LISP, PROLOG, and CSP.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=56500&enhanced=Y"
  },
  {
    "course_code": "CS 57800",
    "title": "",
    "credits": "3.00.  This introductory course will cover many concepts, models, and algorithms in machine learning. Topics include classical supervised learning (e.g., regression and classification), unsupervised learning (e.g., principle component analysis and K-means), and recent development in the machine learning field such as variational Bayes, expectation propagation, and Gaussian processes. While this course will give students the basic ideas and intuition behind modern machine learning methods, the underlying theme in the course is probabilistic inference.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=57800&enhanced=Y"
  },
  {
    "course_code": "CS 58000",
    "title": "",
    "credits": "3.00.  Basic techniques for designing and analyzing algorithms: dynamic programming, divide and conquer, balancing. Upper and lower bounds on time and space costs, worst case and expected cost measures. A selection of applications such as disjoint set union/find, graph algorithms, search trees, pattern matching. The polynomial complexity classes P, NP, and co-NP; intractable problems.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=58000&enhanced=Y"
  },
  {
    "course_code": "CS 58400",
    "title": "",
    "credits": "3.00.  The theory of general purpose programming systems. Recursive and partial-recursive functions; recursive and recursively enumerable sets. The Church-Turing thesis. The recursion theorem, Rogers' translation theorem, Rice's undecidability theorem. The general theory of computational complexity: there are no general solutions to natural optimization problems. Complexity for specific models of computation: the polynomial complexity classes P, NP, and PSPACE; NP-hard and PSPACE-hard problems, inherently exponential problems.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=58400&enhanced=Y"
  },
  {
    "course_code": "CS 58500",
    "title": "",
    "credits": "3.00.\u00a0 This course covers fundamental techniques and a range of mathematical tools that underlie today's research in theoretical computer science. The course material is essential for research in theoretical computer science as well as machine learning theory. The course is targeted at students who plan to pursue research in these areas. Topics will be chosen from four core areas: Convex Analysis and Optimization, Spectral Methods, Concentration Inequalities, and Discrete Fourier Analysis. Depending on student and instructor interest, additional topics will be chosen and may include applied analysis, coding theory, probabilistic proofs, and more advanced topics in discrete Fourier analysis. Students will read papers in theoretical computer science and machine learning theory using, exploring and extending the covered techniques and tools. Students are expected to be proficient in probability theory, have the maturity to follow and carry out basic analysis proofs, and have completed courses in calculus, linear algebra, discrete mathematics, and analysis of algorithms. More specifically, the course expects mastery of the material covered in Calculus III, Linear Algebra, Probability, Foundations of CS, and Analysis of Algorithms.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=58500&enhanced=Y"
  },
  {
    "course_code": "CS 58700",
    "title": "",
    "credits": "3.00.  This course provides an integrated view of the key concepts of deep learning (representation learning) methods. This course focuses on teaching principles and methods needed to design and deploy novel deep learning models, emphasizing the relationship between traditional statistical models, causality, invariant theory, and the algorithmic challenges of designing and deploying deep learning models in real-world applications. This course has both a theoretical and coding component. The course assumes familiarity with coding in the language used for state-of-the-art deep learning libraries, linear algebra, probability theory, and statistical machine learning.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "Configuration 1:  3.0 Credits",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=58700&enhanced=Y"
  },
  {
    "course_code": "CS 59100-SEC",
    "title": "",
    "credits": "1.00.  A weekly seminar presented by faculty and invited speakers, normally in a specific area.",
    "description": "Configuration 1:  1.0 Credit",
    "offered_by": "Configuration 1:  1.0 Credit",
    "department": "Configuration 1:  1.0 Credit",
    "levels": "Configuration 1:  1.0 Credit",
    "schedule_types": "Configuration 1:  1.0 Credit",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=59100&enhanced=Y"
  },
  {
    "course_code": "CS 59200-AAS",
    "title": "",
    "credits": "3.00.  A seminar course for in-depth exploration of a specific topic. Topics vary. Classes consist of both instructor and student presentations. Students read, present and discuss research papers, and may complete and present a research project in the area. For each offering, inclusion on a plan of study is determined by the CS Graduate Study Committee. If approved, may be included on a CS MS or PhD plan of study according to relevant ruleset.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=59200&enhanced=Y"
  },
  {
    "course_code": "CS 59200-CI1",
    "title": "",
    "credits": "3.00.  A seminar course for in-depth exploration of a specific topic. Topics vary. Classes consist of both instructor and student presentations. Students read, present and discuss research papers, and may complete and present a research project in the area. For each offering, inclusion on a plan of study is determined by the CS Graduate Study Committee. If approved, may be included on a CS MS or PhD plan of study according to relevant ruleset.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=59200&enhanced=Y"
  },
  {
    "course_code": "CS 59200-EAI",
    "title": "",
    "credits": "3.00.  A seminar course for in-depth exploration of a specific topic. Topics vary. Classes consist of both instructor and student presentations. Students read, present and discuss research papers, and may complete and present a research project in the area. For each offering, inclusion on a plan of study is determined by the CS Graduate Study Committee. If approved, may be included on a CS MS or PhD plan of study according to relevant ruleset.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=59200&enhanced=Y"
  },
  {
    "course_code": "CS 59200-MLI",
    "title": "",
    "credits": "3.00.  A seminar course for in-depth exploration of a specific topic. Topics vary. Classes consist of both instructor and student presentations. Students read, present and discuss research papers, and may complete and present a research project in the area. For each offering, inclusion on a plan of study is determined by the CS Graduate Study Committee. If approved, may be included on a CS MS or PhD plan of study according to relevant ruleset.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=59200&enhanced=Y"
  },
  {
    "course_code": "CS 59200-MUC",
    "title": "",
    "credits": "3.00.  A seminar course for in-depth exploration of a specific topic. Topics vary. Classes consist of both instructor and student presentations. Students read, present and discuss research papers, and may complete and present a research project in the area. For each offering, inclusion on a plan of study is determined by the CS Graduate Study Committee. If approved, may be included on a CS MS or PhD plan of study according to relevant ruleset.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=59200&enhanced=Y"
  },
  {
    "course_code": "CS 59200-QCS",
    "title": "",
    "credits": "3.00.  A seminar course for in-depth exploration of a specific topic. Topics vary. Classes consist of both instructor and student presentations. Students read, present and discuss research papers, and may complete and present a research project in the area. For each offering, inclusion on a plan of study is determined by the CS Graduate Study Committee. If approved, may be included on a CS MS or PhD plan of study according to relevant ruleset.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=59200&enhanced=Y"
  },
  {
    "course_code": "CS 59200-VBD",
    "title": "",
    "credits": "3.00.  A seminar course for in-depth exploration of a specific topic. Topics vary. Classes consist of both instructor and student presentations. Students read, present and discuss research papers, and may complete and present a research project in the area. For each offering, inclusion on a plan of study is determined by the CS Graduate Study Committee. If approved, may be included on a CS MS or PhD plan of study according to relevant ruleset.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=59200&enhanced=Y"
  },
  {
    "course_code": "CS 59300-CII",
    "title": "",
    "credits": "3.00.  A variable title course for topics not currently covered in the CS graduate curriculum. Each offering follows a traditional course structure with textbook(s), assignments, exams, and week-by-week content synopsis described in a syllabus. A CS 59300 offering does not imply that a course is intended to become, or will become, a regular course in the CS graduate curriculum. May be included on a CS MS or PhD plan of study according to the relevant ruleset.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=59300&enhanced=Y"
  },
  {
    "course_code": "CS 59300-PCA",
    "title": "",
    "credits": "3.00.  A variable title course for topics not currently covered in the CS graduate curriculum. Each offering follows a traditional course structure with textbook(s), assignments, exams, and week-by-week content synopsis described in a syllabus. A CS 59300 offering does not imply that a course is intended to become, or will become, a regular course in the CS graduate curriculum. May be included on a CS MS or PhD plan of study according to the relevant ruleset.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=59300&enhanced=Y"
  },
  {
    "course_code": "CS 59300-SER",
    "title": "",
    "credits": "3.00.  A variable title course for topics not currently covered in the CS graduate curriculum. Each offering follows a traditional course structure with textbook(s), assignments, exams, and week-by-week content synopsis described in a syllabus. A CS 59300 offering does not imply that a course is intended to become, or will become, a regular course in the CS graduate curriculum. May be included on a CS MS or PhD plan of study according to the relevant ruleset.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=59300&enhanced=Y"
  },
  {
    "course_code": "CS 59300-TML",
    "title": "",
    "credits": "3.00.  A variable title course for topics not currently covered in the CS graduate curriculum. Each offering follows a traditional course structure with textbook(s), assignments, exams, and week-by-week content synopsis described in a syllabus. A CS 59300 offering does not imply that a course is intended to become, or will become, a regular course in the CS graduate curriculum. May be included on a CS MS or PhD plan of study according to the relevant ruleset.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=59300&enhanced=Y"
  },
  {
    "course_code": "CS 61500",
    "title": "",
    "credits": "3.00.  (MA 61500) Finite element method for elliptic partial differential equations; weak formulation; finite-dimensional approximations; error bounds; algorithmic issues; solving sparse linear systems; finite element method for parabolic partial differential equations; backward difference and Crank-Nicolson time-stepping; introduction to finite difference methods for elliptic, parabolic, and hyperbolic equations; stability, consistency, and convergence; discrete maximum principles. Prerequisite: CS 51400, MA 52300.",
    "description": "Configuration 1:  3.0 Credits",
    "offered_by": "Configuration 1:  3.0 Credits",
    "department": "Configuration 1:  3.0 Credits",
    "levels": "Configuration 1:  3.0 Credits",
    "schedule_types": "Configuration 1:  3.0 Credits",
    "prerequisites": "N/A",
    "url": "https://selfservice.mypurdue.purdue.edu/prod/bzwsrch.p_catalog_detail?term=202620&subject=CS&cnbr=61500&enhanced=Y"
  }
]